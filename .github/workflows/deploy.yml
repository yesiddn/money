name: Deploy Django Backend to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: PRD

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build deploy archive
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_USERNAME: ${{ secrets.DJANGO_SUPUSER_USERNAME }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
        run: |
          # Create a compressed archive from the committed HEAD and include a generated .env
          git rev-parse --verify HEAD
          tmpdir=$(mktemp -d)
          # export the repo files from HEAD into tmpdir
          git archive --format=tar HEAD | tar -x -C "$tmpdir"

          # write a .env using safe printf expansions of env variables (they are passed above)
          envfile="$tmpdir/.env"
          printf 'POSTGRES_DB=%s\n' "$POSTGRES_DB" > "$envfile"
          printf 'POSTGRES_USER=%s\n' "$POSTGRES_USER" >> "$envfile"
          printf 'POSTGRES_PASSWORD=%s\n' "$POSTGRES_PASSWORD" >> "$envfile"
          printf 'POSTGRES_HOST=%s\n' "$POSTGRES_HOST" >> "$envfile"
          printf 'POSTGRES_PORT=%s\n' "$POSTGRES_PORT" >> "$envfile"
          printf 'DJANGO_SUPERUSER_EMAIL=%s\n' "$DJANGO_SUPERUSER_EMAIL" >> "$envfile"
          printf 'DJANGO_SUPERUSER_PASSWORD=%s\n' "$DJANGO_SUPERUSER_PASSWORD" >> "$envfile"
          printf 'DJANGO_SUPERUSER_USERNAME=%s\n' "$DJANGO_SUPERUSER_USERNAME" >> "$envfile"
          printf 'DJANGO_SECRET_KEY=%s\n' "$DJANGO_SECRET_KEY" >> "$envfile"
          printf 'DJANGO_DEBUG=False\n' >> "$envfile"
          printf 'DJANGO_ALLOWED_HOSTS=%s\n' "$DJANGO_ALLOWED_HOSTS" >> "$envfile"

          # create tar from tmpdir
          (cd "$tmpdir" && tar -czf /github/workspace/deploy.tar.gz .)
          rm -rf "$tmpdir"

      - name: Remote healthcheck & create target dir
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "remote user: $(whoami)"
            echo "remote HOME: $HOME"
            mkdir -p "$HOME/money"
            ls -ld "$HOME" "$HOME/money"

      - name: Upload archive to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
          port: 22
          source: 'deploy.tar.gz'
          target: '/tmp'
          debug: true

      - name: Extract archive and run deploy script on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail
            echo "Preparing deploy directory..."
            rm -rf "$HOME/money"
            mkdir -p "$HOME/money"
            echo "Extracting archive to $HOME/money"
            tar xzf /tmp/deploy.tar.gz -C "$HOME/money"
            rm -f /tmp/deploy.tar.gz

            cd "$HOME/money"
            chmod +x ./config_django_env.sh
            ./config_django_env.sh
